-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_СЕССИЯ.
-- Вывести атрибуты: Н_ЛЮДИ.ФАМИЛИЯ, Н_СЕССИЯ.ДАТА.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ОТЧЕСТВО > Сергеевич.
-- b) Н_СЕССИЯ.ДАТА > 2012-01-25.
-- c) Н_СЕССИЯ.ДАТА = 2012-01-25.
-- Вид соединения: RIGHT JOIN.
select people."ФАМИЛИЯ", session."ДАТА"
from "Н_ЛЮДИ" people
         right join "Н_СЕССИЯ" session on people."ИД" = session."ЧЛВК_ИД"
where people."ОТЧЕСТВО" > 'Сергеевич'
  and session."ДАТА" > '2012-01-25'
  and session."ДАТА" = '2012-01-25';

-- Сделать запрос для получения атрибутов из указанных таблиц, применив фильтры по указанным условиям:
-- Таблицы: Н_ЛЮДИ, Н_ВЕДОМОСТИ, Н_СЕССИЯ.
-- Вывести атрибуты: Н_ЛЮДИ.ИМЯ, Н_ВЕДОМОСТИ.ИД, Н_СЕССИЯ.ИД.
-- Фильтры (AND):
-- a) Н_ЛЮДИ.ОТЧЕСТВО < Георгиевич.
-- b) Н_ВЕДОМОСТИ.ИД < 1490007.
-- Вид соединения: LEFT JOIN.
select people."ИМЯ", vedomost."ИД", session."ИД"
from "Н_ЛЮДИ" people
         left join "Н_ВЕДОМОСТИ" vedomost on people."ИД" = vedomost."ЧЛВК_ИД"
         left join "Н_СЕССИЯ" session on people."ИД" = vedomost."ЧЛВК_ИД"
where people."ОТЧЕСТВО" < 'Георгиевич'
  and vedomost."ИД" < 1490007;

-- Вывести число студентов ФКТИУ, которые не имеет отчества.
-- Ответ должен содержать только одно число.
select count(*)
from "Н_ЛЮДИ"
         join "Н_УЧЕНИКИ" on "Н_ЛЮДИ"."ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"
         join "Н_ПЛАНЫ" on "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
         join "Н_ОТДЕЛЫ" on "Н_ПЛАНЫ"."ОТД_ИД" = "Н_ОТДЕЛЫ"."ИД"
where "Н_ЛЮДИ"."ОТЧЕСТВО" is null
  and "Н_ОТДЕЛЫ"."КОРОТКОЕ_ИМЯ" = 'КТиУ';

-- В таблице Н_ГРУППЫ_ПЛАНОВ найти номера планов, по которым обучается (обучалось) менее 2 групп ФКТИУ.
-- Для реализации использовать подзапрос.

select "ПЛАН_ИД"
from "Н_ГРУППЫ_ПЛАНОВ"
where "ПЛАН_ИД" in (select "ИД"
                    from "Н_ПЛАНЫ"
                    where (select "Н_ОТДЕЛЫ"."ИД"
                           from "Н_ОТДЕЛЫ"
                           where "Н_ОТДЕЛЫ"."КОРОТКОЕ_ИМЯ" = 'КТиУ') =
                          "Н_ПЛАНЫ"."ОТД_ИД")
group by "ПЛАН_ИД"
having count(*) < 2;


-- Выведите таблицу со средними оценками студентов группы 4100 (Номер, ФИО, Ср_оценка), у которых средняя оценка не меньше минимальной оценк(е|и) в группе 1100.
explain analyse
select "Н_ЛЮДИ"."ИД"
     , "Н_ЛЮДИ"."ИМЯ"
     , "Н_ЛЮДИ"."ФАМИЛИЯ"
     , avg(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" as INTEGER))
from "Н_ЛЮДИ"
         join "Н_УЧЕНИКИ" on "Н_ЛЮДИ"."ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"
         join "Н_ВЕДОМОСТИ" on "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
         join "Н_ОЦЕНКИ" on "Н_ВЕДОМОСТИ"."ОЦЕНКА" = "Н_ОЦЕНКИ"."КОД" and "Н_ОЦЕНКИ"."КОД" in ('2', '3', '4', '5')
where "Н_УЧЕНИКИ"."ГРУППА" = '4100'
group by "Н_ЛЮДИ"."ИД", "Н_ЛЮДИ"."ИМЯ", "Н_ЛЮДИ"."ФАМИЛИЯ"
having avg(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" as INTEGER)) >= (select min(minimy)
                                                        from (select min(CAST("Н_ВЕДОМОСТИ"."ОЦЕНКА" as INTEGER)) as minimy
                                                              from "Н_УЧЕНИКИ"
                                                                       join "Н_ВЕДОМОСТИ"
                                                                            on "Н_УЧЕНИКИ"."ЧЛВК_ИД" = "Н_ВЕДОМОСТИ"."ЧЛВК_ИД"
                                                                       join "Н_ОЦЕНКИ" on "Н_ВЕДОМОСТИ"."ОЦЕНКА" =
                                                                                          "Н_ОЦЕНКИ"."КОД" and
                                                                                          "Н_ОЦЕНКИ"."КОД" in
                                                                                          ('2', '3', '4', '5')
                                                              where "Н_УЧЕНИКИ"."ГРУППА" = '1100'
                                                              group by "Н_УЧЕНИКИ"."ИД") as zxc);

-- Получить список студентов, отчисленных ровно первого сентября 2012 года с очной или заочной формы обучения. В результат включить:
-- номер группы;
-- номер, фамилию, имя и отчество студента;
-- номер пункта приказа;
-- Для реализации использовать подзапрос с IN.
select "ГРУППА", "Н_ЛЮДИ"."ИД", "ИМЯ", "ФАМИЛИЯ", "Н_ПЛАНЫ"."НОМЕР"
from "Н_ЛЮДИ"
         join "Н_УЧЕНИКИ" on "Н_ЛЮДИ"."ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"
         join "Н_ПЛАНЫ" on "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
         join "Н_ФОРМЫ_ОБУЧЕНИЯ" on "Н_ПЛАНЫ"."ФО_ИД" = "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИД"
where "Н_ЛЮДИ"."ИД" in (select "Н_ЛЮДИ"."ИД"
                        from "Н_ЛЮДИ"
                                 join "Н_УЧЕНИКИ" on "Н_ЛЮДИ"."ИД" = "Н_УЧЕНИКИ"."ЧЛВК_ИД"
                                 join "Н_ПЛАНЫ" on "Н_УЧЕНИКИ"."ПЛАН_ИД" = "Н_ПЛАНЫ"."ИД"
                                 join "Н_ФОРМЫ_ОБУЧЕНИЯ" on "Н_ПЛАНЫ"."ФО_ИД" = "Н_ФОРМЫ_ОБУЧЕНИЯ"."ИД"
                        where "Н_УЧЕНИКИ"."ПРИЗНАК" = 'отчисл'
                          and "Н_ФОРМЫ_ОБУЧЕНИЯ"."НАИМЕНОВАНИЕ" in ('Очная', 'Заочная')
                          and "Н_УЧЕНИКИ"."КОНЕЦ_ПО_ПРИКАЗУ" = '01-02-2012');


-- Вывести список студентов, имеющих одинаковые отчества, но не совпадающие даты рождения.
SELECT DISTINCT "ОТЧЕСТВО", "ИМЯ", "ДАТА_РОЖДЕНИЯ"
FROM "Н_ЛЮДИ"
         JOIN "Н_УЧЕНИКИ" ON "Н_ЛЮДИ"."ИД" = "ЧЛВК_ИД"
WHERE "Н_ЛЮДИ"."ОТЧЕСТВО" IN (SELECT p."ОТЧЕСТВО" FROM "Н_ЛЮДИ" AS p WHERE "Н_ЛЮДИ"."ИД" != p."ИД")